class Scientist : ZilchComponent
{
  var I : Integer = Integer(0); // Text counter
  
  var Switch : String = "On";
  var Player : Cog;
    
  var TextArray : Array[String] = Array[String](); // The array of strings that will be printed on the screen
  var Done : Boolean = false;
  // 30 strings for the text
  
  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    this.Player = this.Space.FindObjectByName("Player");
    
    this.TextArray.Add("");
    this.TextArray.Add("");
    this.TextArray.Add("Scientist: \"You there, you look like a man who");
    this.TextArray.Add(" respects the fine art of science.\"");
    this.TextArray.Add("\"Surely you will help me complete my glorious machine.\"");
    this.TextArray.Add("");
    this.TextArray.Add("\"The only ingredient left is an ostrich.");
    this.TextArray.Add(" Could you fetch me one?\"");
    this.TextArray.Add("\"I assure you, it is purely for");
    this.TextArray.Add(" the sake of science.\"");
    this.TextArray.Add("");
    this.TextArray.Add("");
  }


  function OnLogicUpdate(event : UpdateEvent)
  {
    //Finds Player
    var player = this.Player;
    
    //If the player is near the object
    if(player.RayCastings.DistanceLooking < 0.5 && player.RayCastings.HitObject == this.Owner)
    {
      //If you are talking to it AKA I is not zero
      if (this.I != 0)
      {
        //You are taliking to it 
        player.PlayerController.Talking = true;
      }
      
      //If you press enter and is not typing
      if(Zero.Keyboard.KeyIsPressed(Keys.Enter) && this.GameSession.GameStats.DoneTyping
          && (this.GameSession.GameStats.CurrentString == "" || this.I > 0))
      {
        //Increment the text counter by 2
        this.I += 2; 
        //Add the next two strings in the string array to the current string
        this.GameSession.GameStats.CurrentString = ("`this.TextArray[this.I]`\n`this.TextArray[this.I+1]`");
      }
      
      //If you have reached an empty string that is not the first two or X is pressed
      if(((this.TextArray[this.I]) == "" && (this.I != 0))
      || (Zero.Keyboard.KeyIsPressed(Keys.X) && this.GameSession.GameStats.DoneTyping))
      {
        this.TextArray.Set(2, "\"Really, it is only to progress science.\"");
        this.TextArray.Set(3, "");
        this.TextArray.Set(4, "\"You have nothing to worry about in");
        this.TextArray.Set(5, " giving me an ostrich.\"");
        this.Done = true;
        //Player isn't talking anymore
        player.PlayerController.Talking = false;
        // Reset the text counter
        this.I = 0;
        this.GameSession.GameStats.CurrentString = "";
        
        
        if(this.Switch == "On")
        {
          this.Space.CreateAtPosition(Archetype.RedFigure_3, Real3(11.5, 5.5, 0.0));
          this.Space.FindObjectByName("RedFigure_2").Destroy();
          this.Space.FindObjectByName("RedFigure2_2").Destroy();
          this.Space.FindObjectByName("RedFigureSide").Destroy();
          this.Space.FindObjectByName("RedFigureSide2_2").Destroy();
          this.Switch = "Off";
        }
      }
    }
  }
}
