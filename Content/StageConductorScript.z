class StageConductorScript : ZilchComponent
{
    
    var I : Integer = Integer(0); //Text counter
    
    var TextArray : Array[String] = Array[String](); // The array of strings that will be printed on the screen
    
    var Player : Cog;
    
    var Wardrobe : Cog;
    
    var Input : String; //The input that the player will input.
    
    var Talked : Boolean = false; //The varable that see if the player has talked to this object
    
    [Property]
    var RightAnswer : String;
    
    [Property]
    var WrongAnswer : String;
    
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        
        this.Player = this.Space.FindObjectByName("Player"); //Finds the player
        this.Wardrobe = this.Space.FindObjectByName("Wardrobe");
        
        this.TextArray.Add(""); //The first element of the string array, it will aways be ""
        this.TextArray.Add("\"Come one and all to see the most bizarre freaks \nof nature imaginable!\"");
        this.TextArray.Add("\"These odd creatures are 100% guaranteed to make\nyou feel better about yourself.\"");
        this.TextArray.Add("\"Hey, who are you?\"");
        this.TextArray.Add("\"Get out of here! You’'re screwing with my show!\"");
        this.TextArray.Add("\"What’'s that? You want to participate?”\"");
        this.TextArray.Add("\"Hmm, I don’'t know... I guess you’'re pretty freaky \nlooking... hmm...”\"");
        this.TextArray.Add("\"I’'m afraid it’'s not so simple, though. We prefer to have \nour animals work in pairs. What kind of animal are you?\"");
        this.TextArray.Add("");
        this.TextArray.Add("”");
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        var text = this.Space.LevelSettings.HudInteraction.HudText; //Finds the hud text
        
        
        // If the object is next to the player
        if(this.Player.RayCastings.DistanceLooking < 0.5 && this.Player.RayCastings.HitObject == this.Owner)
        {
            //If the player presses enter and not at the begining of the string
            if(Zero.Keyboard.KeyIsPressed(Keys.Enter) && this.GameSession.GameStats.DoneTyping
                && (this.GameSession.GameStats.CurrentString == "" || this.I > 0))
            {
                if(this.I == 10)
                {
                    this.Player.Transform.Translation = Real3(3.5, 4.5, 0);
                    this.Player.PlayerController.NextPosX = this.Player.Transform.Translation.X;
                    this.Player.PlayerController.NextPosY = this.Player.Transform.Translation.Y;
                    this.Space.CreateAtPosition(Archetype.Rhino, Real3(1.5, 3.5, 0));
                    this.Player.PlayerController.Talking = false;
                    this.I = 0;
                    this.GameSession.GameStats.CurrentString = "";
                    this.GameSession.GameStats.Trigger = "Desk";
                    this.Wardrobe.ContainerRhinoScript.HasRhino = false;
                    this.Owner.Parent.Destroy();
                    
                    
                }
                else if(this.I == 8 && this.Input == "")
                {
                }
                else
                {
                //Go to the next string
                    ++this.I;
                }
                
            }
            
            //If it has reached the end of the string or the player has pressed enter, stop talking to it
            if(this.I >= this.TextArray.Count 
            || (Zero.Keyboard.KeyIsPressed(Keys.X) && this.GameSession.GameStats.DoneTyping && !this.Player.PlayerController.Texting ))
            {
                this.Player.PlayerController.Talking = false;
                this.I = 0;
                this.GameSession.GameStats.CurrentString = "";
            }
            //If not in the begining of the string
            if (this.I > 0)
            {
                this.GameSession.GameStats.CurrentString = this.TextArray[this.I];
            }
        }
        else //If not next to the player
        {
            //Reset text counter 
            this.I = 0;
        }
        
        if (this.I != 0)
        {
            this.Player.PlayerController.Talking = true;
        }
        
        this.TextArray.Set(8, (text.TextInput.ST));
        
        if (this.I < 8)
        {
            text.TextInput.ST = "";
        }
        else if (this.I == 8)
        { 
            if(this.Player.PlayerController.Texting == false)
            {
                this.Player.PlayerController.Texting = true;
            }
            this.GameSession.GameStats.AutoComplete = true;
        }
        else if (this.I != 8)
        {
            this.GameSession.GameStats.AutoComplete = false;
        }
        
        if(this.Talked == true && this.Player.PlayerController.Talking == true && this.I < 8 )
        {
            this.I = 7;
        }
        
        if(this.I == 9)
        {
            this.Input = this.Input.ToLower();
            this.WrongAnswer = this.WrongAnswer.ToLower();
            this.RightAnswer = this.RightAnswer.ToLower();
            
            if(this.Input != this.WrongAnswer && this.Input != this.RightAnswer)
            {
                this.Talked = true;
                this.TextArray.Set(9,"“\"What? That isn't an animal. \nSorry.\"");
            }
            else if(this.Input != this.RightAnswer)
            {
                this.Talked = true;
                this.TextArray.Set(9,"“\"A dog? Eh, we have enough freaky looking dogs. \nSorry.\"");
            }
            else
            {
                this.TextArray.Set(9,"\"A rhino? Really? What a strange coincidence, \nwe just got a new rhino recently.\"");
                if (this.TextArray.Count <= 10 )
                {
                    this.TextArray.Add("\"I'll bet you two would make a perfect pair!\nCome with me, we’'ll get you in your cage.\"");
                    
                }
            }
            this.Player.PlayerController.Texting = false;
        }
        
        //If the player is texting, set Input to what ever the players types.
        if(this.Player.PlayerController.Texting == true)
        {
            this.Input = text.TextInput.ST;
        }
    }
}
