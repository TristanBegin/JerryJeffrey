class P2Talking : ZilchComponent
{
  var I : Integer = Integer(0); //Text counter
  
  var TextArray : Array[String] = Array[String](); // The array of strings that will be printed on the screen
  
  var Player : Cog;
  
  var Input : String; //The input that the player will input.
  
  var Talked : Boolean = false; //The varable that see if the player has talked to this object
  
  var Solved : Boolean = false;
  
  [Property]
  var RightAnswer : String;
  
  [Property]
  var WrongAnswer : String;
  
  var JerryFloor : Cog;
  var BlueFigure : Cog;
  var BlueBox : Cog;
  
  var Switch : String = "On";
  
  function Initialize(init : CogInitializer)
  {
    this.Player = this.Space.FindObjectByName("Player"); //Finds the player
    
    Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    
    this.JerryFloor = this.Space.FindObjectByName("JerryFloor");
    this.BlueFigure = this.Space.FindObjectByName("BlueFigure");
    this.BlueBox = this.Space.FindObjectByName("SecondBox5");
    
    this.TextArray.Add(""); //The first element of the string array, it will aways be ""
    this.TextArray.Add("\"What do you want from me?\"");
    this.TextArray.Add("");
    this.TextArray.Add("”");
    this.TextArray.Add("");

  }

  function OnLogicUpdate(event : UpdateEvent)
  {
    var text = this.Space.LevelSettings.HudInteraction.HudText; //Finds the hud text
    
    if (this.Player.Transform.Translation == Real3(12.5, 5.5, 0.0))
    {
      if(this.Player.RayCastings.DistanceLooking < 0.5 && this.Player.RayCastings.HitObject == this.Owner)
      {
        if(Zero.Keyboard.KeyIsPressed(Keys.Enter) && this.GameSession.GameStats.DoneTyping && 
          (this.GameSession.GameStats.CurrentString == "" || this.I > 0))
        {
          if(this.I == 2 && this.Input == "")
          {
          }
          else
          {
          //Go to the next string
            ++this.I;
          }
        }
        
        //If it has reached the end of the string or the player has pressed enter, stop talking to it
        if(this.I >= this.TextArray.Count 
        || (Zero.Keyboard.KeyIsPressed(Keys.X) && this.GameSession.GameStats.DoneTyping && !this.Player.PlayerController.Texting ))
        {
          this.Player.PlayerController.Talking = false;
          this.I = 0;
          this.GameSession.GameStats.CurrentString = "";
        
          if (this.Solved == true && this.Switch == "On")
          {
            this.Space.FindObjectByName("LintBall2").Destroy();
            this.Space.CreateAtPosition(Archetype.LintBall2_2, Real3(0.5, 2.5, 0.0));
            this.Space.CreateAtPosition(Archetype.PurpleFigure3, this.Owner.Transform.Translation);
            this.Owner.Destroy();
            this.Switch = "Off";
          }
        }
        //If not in the begining of the string
        if (this.I > 0)
        {
          this.GameSession.GameStats.CurrentString = this.TextArray[this.I];
        }
      }
      else //If not next to the player
      {
        //Reset text counter 
        this.I = 0;
      }
      
      if (this.I != 0)
      {
        this.Player.PlayerController.Talking = true;
      }
      
      this.TextArray.Set(2, (text.TextInput.ST));
      
      if (this.I < 2)
      {
        text.TextInput.ST = "";
      }
      else if (this.I == 2)
      { 
        if(this.Player.PlayerController.Texting == false)
        {
          this.Player.PlayerController.Texting = true;
        }
        this.GameSession.GameStats.AutoComplete = true;
      }
      else if (this.I != 2)
      {
        this.GameSession.GameStats.AutoComplete = false;
      }
      
      if(this.Talked == true && this.Player.PlayerController.Talking == true && this.I < 2 )
      {
        this.I = 1;
      }
      
      if(this.I == 3)
      {
        this.Input = this.Input.ToLower();
        this.WrongAnswer = this.WrongAnswer.ToLower();
        this.RightAnswer = this.RightAnswer.ToLower();
        
        if(this.Input != this.WrongAnswer && this.Input != this.RightAnswer)
        {
          this.Talked = true;
          this.TextArray.Set(3,"“\"You aren't making any sense.\"");
        }
        else if(this.Input == this.WrongAnswer)
        {
          this.Talked = true;
          this.TextArray.Set(3,"“\"Hmm...I don't think so.\"");
        }
        else if (this.Input == this.RightAnswer)
        {
          this.Solved = true;
          this.TextArray.Set(3,"\"Fine, if you insist.\nHere, take this pencil.\"");
          this.TextArray.Set(4,"\"Oh! I dropped it! Where'd it go?\nI guess you just have to move on.\"");
        }
        else if(this.Input == this.RightAnswer && 
                this.Switch == "Off")
        {
          this.TextArray.Set(3,"\"Don't look at me like that...\"");
          this.TextArray.Set(4,"\"You're the one that dropped it.\"");
        }
        
        this.Player.PlayerController.Texting = false;
      }
      
      //If the player is texting, set Input to what ever the players types.
      if(this.Player.PlayerController.Texting == true)
      {
          this.Input = text.TextInput.ST;
      }
    }
  }
}
