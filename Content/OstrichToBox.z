class OstrichToBox : ZilchComponent
{
  var UsedOstrich : Boolean = false;
  var JeffreyFloor : Cog;
  var Rhino : Cog;
  var PitTop : Cog;
  var PitBottom : Cog;
  var ItemInBox : String = "";
  var Player : Cog;
  
  var TextArray : Array[String] = Array[String]();
  var I : Integer = 0;
  
  [Property]
  var PitWorld : SpriteSource;
  
  function Initialize(init : CogInitializer)
  {
    /* Text Array Stuff */
    this.TextArray.Add("");
    this.TextArray.Add("It's a box.");
    
    
    Zero.Connect(this.Owner, Events.ItemUsed, this.OnItemUsed);
    Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    
    this.JeffreyFloor = this.Space.FindObjectByName("JeffreyFloor");
    
    this.Player = this.Space.FindObjectByName("Player");
    
    this.PitTop = this.Space.FindObjectByName("PitRoomTop");
    this.PitTop.BoxCollider.Ghost = true;
    
    this.PitBottom = this.Space.FindObjectByName("PitRoomBottom");
    this.PitBottom.BoxCollider.Ghost = true;
    
    this.Rhino = this.Space.FindObjectByName("Rhino");
    this.Rhino.Sprite.Visible = false;
    this.Rhino.BoxCollider.Ghost = true;
  }

  function OnLogicUpdate(event : UpdateEvent)
  {
    
    if (this.Player.RayCastings.DistanceLooking < 0.5 && this.Player.RayCastings.HitObject == this.Owner)
    {
      if (Zero.Keyboard.KeyIsPressed(Keys.Enter) && this.GameSession.GameStats.DoneTyping == true
          && (this.GameSession.GameStats.CurrentString == "" || this.I > 0))
      {
        ++this.I;
      }
      
      if (Zero.Keyboard.KeyIsPressed(Keys.Enter))
      {
        if (this.GameSession.GameStats.CurrentString == "" && this.GameSession.GameStats.DoneTyping == true)
        {
          if (this.ItemInBox == "Ostrich" && this.Player.PlayerController.Talking == false)
          {
            this.GameSession.GameStats.ObjectTwo = "Ostrich";
            this.ItemInBox = "";
            this.TextArray.Set(1, "You grabbed the ostrich from the box.");
            this.I = 1;
          }
        }
      }
      
      if (this.I >= this.TextArray.Count || (Zero.Keyboard.KeyIsPressed(Keys.X) && this.GameSession.GameStats.DoneTyping == true))
      {
        this.I = 0;
        this.Player.PlayerController.Talking = false;
        this.GameSession.GameStats.CurrentString = "";
      }
      
    }
    else
    {
      this.I = 0;
    }
    
    if (this.I > 0)
    {
      this.GameSession.GameStats.CurrentString = this.TextArray[this.I];
    }
    
    if (this.I != 0)
    {
      this.Player.PlayerController.Talking = true;
    }
    
    
    if (this.UsedOstrich == true)
    {
      this.GameSession.GameStats.CurrentString = "";
      this.TextArray.Set(1, "The ceramic ostrich is in the box.");
      this.I = 1;
      this.UsedOstrich = false;
    }
  }

  function OnItemUsed(event : ItemUsed)
  {
    
    if (event.TheItem == "Ostrich" && this.ItemInBox == "")
    {
      this.ItemInBox = "Ostrich";
      this.GameSession.GameStats.ObjectTwo = "";
      this.JeffreyFloor.Sprite.SpriteSource = this.PitWorld;
      
      this.PitTop.BoxCollider.Ghost = false;
      this.PitBottom.BoxCollider.Ghost = false;
      
      this.UsedOstrich = true;
      
      if (this.Rhino != null)
      {
        this.Rhino.Sprite.Visible = true;
        this.Rhino.BoxCollider.Ghost = false;
      }
    }
  }
}
