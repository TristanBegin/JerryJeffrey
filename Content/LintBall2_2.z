class LintBall2_2 : ZilchComponent
{
  var I : Integer = Integer(0); //Text counter
  
  var TextArray : Array[String] = Array[String](); // The array of strings that will be printed on the screen
  
  var Player : Cog;
  
  var Input : String; //The input that the player will input.
  
  var Talked : Boolean = false; //The varable that see if the player has talked to this object
  
  [Property]
  var RightAnswer : String;
  
  [Property]
  var WrongAnswer : String;
  
  var JeffreyFloor : Cog;
  
  var Switch : String = "On";
  
  function Initialize(init : CogInitializer)
  {
    this.Player = this.Space.FindObjectByName("Player"); //Finds the player
    this.JeffreyFloor = this.Space.FindObjectByName("JeffreyFloor");
    
    Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    
    this.TextArray.Add(""); //The first element of the string array, it will aways be ""
    this.TextArray.Add("\"Phew. At least that's over.\"");
    this.TextArray.Add("\"This gaping wound hurts, though. \"");
    this.TextArray.Add("\"If only I had something to staunch the bleeding...”\"");
    this.TextArray.Add("");
    this.TextArray.Add("");
    this.TextArray.Add("");

  }

  function OnLogicUpdate(event : UpdateEvent)
  {
    var text = this.Space.LevelSettings.HudInteraction.HudText; //Finds the hud text
    
    if(this.Player.RayCastings.DistanceLooking < 0.5 && this.Player.RayCastings.HitObject == this.Owner)
    {
      if(Zero.Keyboard.KeyIsPressed(Keys.Enter) && this.GameSession.GameStats.DoneTyping && 
        (this.GameSession.GameStats.CurrentString == "" || this.I > 0))
      {
        if(this.I == 2 && this.Input == "")
        {
        }
        else
        {
        //Go to the next string
          ++this.I;
        }
      }
      
      //If it has reached the end of the string or the player has pressed enter, stop talking to it
      if(this.I >= this.TextArray.Count 
      || (Zero.Keyboard.KeyIsPressed(Keys.X) && this.GameSession.GameStats.DoneTyping && !this.Player.PlayerController.Texting ))
      {
        this.Player.PlayerController.Talking = false;
        this.I = 0;
        this.GameSession.GameStats.CurrentString = "";
      }
      //If not in the begining of the string
      if (this.I > 0)
      {
        this.GameSession.GameStats.CurrentString = this.TextArray[this.I];
      }
    }
    else //If not next to the player
    {
      //Reset text counter 
      this.I = 0;
    }
    
    if (this.I != 0)
    {
      this.Player.PlayerController.Talking = true;
    }
    
    this.TextArray.Set(2, (text.TextInput.ST));
    
    if (this.I < 4)
    {
      text.TextInput.ST = "";
    }
    else if (this.I == 4)
    { 
      if(this.Player.PlayerController.Texting == false)
      {
        this.Player.PlayerController.Texting = true;
      }
      this.GameSession.GameStats.AutoComplete = true;
    }
    else if (this.I != 4)
    {
      this.GameSession.GameStats.AutoComplete = false;
    }
    
    if(this.Talked == true && this.Player.PlayerController.Talking == true && this.I < 2 )
    {
      this.I = 1;
    }
    
    if(this.I == 5)
    {
      this.Input = this.Input.ToLower();
      this.WrongAnswer = this.WrongAnswer.ToLower();
      this.RightAnswer = this.RightAnswer.ToLower();
      
      if(this.Input != this.WrongAnswer && this.Input != this.RightAnswer)
      {
        this.Talked = true;
        this.TextArray.Set(4,"“\"What the heck are you trying to say to me?.\"");
      }
      else if(this.Input == this.WrongAnswer)
      {
        this.Talked = true;
        this.TextArray.Set(4,"“\"That won't help me...you worthless piece\nof trash.\"");
      }
      else if (this.Input == this.RightAnswer)
      {
        this.TextArray.Set(4,"\"Aaahhh, that feels better.\"");
        
        if(this.Switch == "On")
        {
          
        }
        this.Switch = "Off";
      }
      else if(this.Input == this.RightAnswer && 
              this.Switch == "Off")
      {
        this.TextArray.Set(4,"\"I already told you it felt nice!\"");
        this.TextArray.Set(5,"\"Stop pestering me!\"");
      }
      
      this.Player.PlayerController.Texting = false;
    }
    
    //If the player is texting, set Input to what ever the players types.
    if(this.Player.PlayerController.Texting == true)
    {
        this.Input = text.TextInput.ST;
    }
  }
}
